{"version":3,"sources":["assets/zen.png","components/zenPad.js","components/useDebounce.js","App.js","index.js"],"names":["module","exports","ZenPad","useState","zenInput","setZenInput","isResetting","setIsResetting","className","setClassName","debounceInput","value","delay","debouncedValue","setDebouncedValue","useEffect","handler","setTimeout","clearTimeout","useDebounce","reset","console","log","type","rows","autoFocus","onChange","e","target","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sKAAAA,EAAOC,QAAU,IAA0B,iC,sGCKpC,SAASC,IAAU,IAAD,EACWC,mBAAS,IADpB,mBACdC,EADc,KACJC,EADI,OAEiBF,oBAAS,GAF1B,mBAEdG,EAFc,KAEDC,EAFC,OAGaJ,mBAAS,YAHtB,mBAGdK,EAHc,KAGHC,EAHG,KAIfC,ECNH,SAAqBC,EAAOC,GAAO,MAEIT,mBAASQ,GAFb,mBAEjCE,EAFiC,KAEjBC,EAFiB,KA6BxC,OAzBAC,qBACE,WAEE,IAAMC,EAAUC,YAAW,WACzBH,EAAkBH,KACjBC,GAUH,OAAO,WACLM,aAAaF,MAMjB,CAACL,IAGIE,EDvBiBM,CAAYf,EAAU,KAsB5C,SAASgB,IACLf,EAAY,IACZI,EAAa,YAKjB,OA3BAM,qBACI,WACQL,IACKJ,IACDe,QAAQC,IAAI,0BAA2BZ,GAUnDH,GAAe,GACfE,EAAa,mBACbQ,WAAWG,EAAO,KAClBb,GAAe,OAPZ,CAACG,IAkBJ,yBAAKF,UAAU,cACX,8BAAUG,MAAOP,EAAUmB,KAAK,OAAOC,KAAK,KAAKC,WAAS,EAACjB,UAAWA,EAClEkB,SAAU,SAAAC,GAAC,OAAItB,EAAYsB,EAAEC,OAAOjB,W,YEtBrCkB,MAbf,WACE,OACE,yBAAKrB,UAAU,aACb,yBAAKA,UAAU,OACf,sCAEA,uHACN,kBAACN,EAAD,S,MCRA4B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.93365a04.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/zen.128e7333.png\";","import React, { useState, useEffect } from 'react'\r\nimport './zenPad.scss'\r\nimport { useDebounce } from './useDebounce'\r\n\r\n\r\nexport function ZenPad() {\r\n    const [zenInput, setZenInput] = useState('');\r\n    const [isResetting, setIsResetting] = useState(false);\r\n    const [className, setClassName] = useState('padInput');\r\n    const debounceInput = useDebounce(zenInput, 5000);\r\n\r\n    useEffect(\r\n        () => {\r\n            if (debounceInput) {\r\n                if (!isResetting) {\r\n                    console.log(\"debounced and resetting\", debounceInput)\r\n                    letGo()\r\n                }\r\n\r\n            }\r\n\r\n        }, [debounceInput]\r\n    )\r\n\r\n    function letGo() {\r\n        setIsResetting(true);\r\n        setClassName('padInput hidden');\r\n        setTimeout(reset, 5000)\r\n        setIsResetting(false);\r\n    }\r\n\r\n    function reset() {\r\n        setZenInput('');\r\n        setClassName('padInput');\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"padWrapper\">\r\n            <textarea value={zenInput} type=\"text\" rows=\"15\" autoFocus className={className}\r\n                onChange={e => setZenInput(e.target.value)}>\r\n            </textarea>\r\n        </div>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\n\r\n// Our hook\r\nexport function useDebounce(value, delay) {\r\n  // State and setters for debounced value\r\n  const [debouncedValue, setDebouncedValue] = useState(value);\r\n\r\n  useEffect(\r\n    () => {\r\n      // Set debouncedValue to value (passed in) after the specified delay\r\n      const handler = setTimeout(() => {\r\n        setDebouncedValue(value);\r\n      }, delay);\r\n\r\n      // Return a cleanup function that will be called every time ...\r\n      // ... useEffect is re-called. useEffect will only be re-called ...\r\n      // ... if value changes (see the inputs array below). \r\n      // This is how we prevent debouncedValue from changing if value is ...\r\n      // ... changed within the delay period. Timeout gets cleared and restarted.\r\n      // To put it in context, if the user is typing within our app's ...\r\n      // ... search box, we don't want the debouncedValue to update until ...\r\n      // ... they've stopped typing for more than 500ms.\r\n      return () => {\r\n        clearTimeout(handler);\r\n      };\r\n    },\r\n    // Only re-call effect if value changes\r\n    // You could also add the \"delay\" var to inputs array if you ...\r\n    // ... need to be able to change that dynamically.\r\n    [value] \r\n  );\r\n\r\n  return debouncedValue;\r\n}\r\n","import React from 'react';\nimport { ZenPad } from './components/zenPad';\nimport './App.scss';\nimport logo from './assets/zen.png'\n\n\nfunction App() {\n  return (\n    <div className=\"container\">\n      <div className=\"col\">\n      <h1>ZenPad</h1>\n \n      <p>Write down your thoughts that you need to get out of your head and watch them fade away.</p>\n<ZenPad></ZenPad>\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.scss';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}